<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.datatrees.rawdatacentral.dao.TaskDAO">
  <resultMap id="BaseResultMap" type="com.datatrees.spider.share.domain.model.Task">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="TaskId" jdbcType="BIGINT" property="taskId" />
    <result column="WebsiteId" jdbcType="INTEGER" property="websiteId" />
    <result column="NodeName" jdbcType="VARCHAR" property="nodeName" />
    <result column="OpenUrlCount" jdbcType="INTEGER" property="openUrlCount" />
    <result column="OpenPageCount" jdbcType="INTEGER" property="openPageCount" />
    <result column="RequestFailedCount" jdbcType="INTEGER" property="requestFailedCount" />
    <result column="RetryCount" jdbcType="INTEGER" property="retryCount" />
    <result column="FilteredCount" jdbcType="INTEGER" property="filteredCount" />
    <result column="Status" jdbcType="SMALLINT" property="status" />
    <result column="Remark" jdbcType="VARCHAR" property="remark" />
    <result column="ResultMessage" jdbcType="VARCHAR" property="resultMessage" />
    <result column="Duration" jdbcType="INTEGER" property="duration" />
    <result column="ExtractedCount" jdbcType="INTEGER" property="extractedCount" />
    <result column="ExtractSucceedCount" jdbcType="INTEGER" property="extractSucceedCount" />
    <result column="ExtractFailedCount" jdbcType="INTEGER" property="extractFailedCount" />
    <result column="StoreFailedCount" jdbcType="INTEGER" property="storeFailedCount" />
    <result column="NotExtractCount" jdbcType="INTEGER" property="notExtractCount" />
    <result column="NetworkTraffic" jdbcType="BIGINT" property="networkTraffic" />
    <result column="StartedAt" jdbcType="TIMESTAMP" property="startedAt" />
    <result column="FinishedAt" jdbcType="TIMESTAMP" property="finishedAt" />
    <result column="CreatedAt" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, TaskId, WebsiteId, NodeName, OpenUrlCount, OpenPageCount, RequestFailedCount, 
    RetryCount, FilteredCount, Status, Remark, ResultMessage, Duration, ExtractedCount, 
    ExtractSucceedCount, ExtractFailedCount, StoreFailedCount, NotExtractCount, NetworkTraffic, 
    StartedAt, FinishedAt, CreatedAt
  </sql>
  <select id="selectByExample" parameterType="com.datatrees.spider.share.domain.model.example.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_tasklog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="pageNum > 0 and pageSize > 0">
        limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_tasklog
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_tasklog
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.datatrees.spider.share.domain.model.Task">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_tasklog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        TaskId,
      </if>
      <if test="websiteId != null">
        WebsiteId,
      </if>
      <if test="nodeName != null">
        NodeName,
      </if>
      <if test="openUrlCount != null">
        OpenUrlCount,
      </if>
      <if test="openPageCount != null">
        OpenPageCount,
      </if>
      <if test="requestFailedCount != null">
        RequestFailedCount,
      </if>
      <if test="retryCount != null">
        RetryCount,
      </if>
      <if test="filteredCount != null">
        FilteredCount,
      </if>
      <if test="status != null">
        Status,
      </if>
      <if test="remark != null">
        Remark,
      </if>
      <if test="resultMessage != null">
        ResultMessage,
      </if>
      <if test="duration != null">
        Duration,
      </if>
      <if test="extractedCount != null">
        ExtractedCount,
      </if>
      <if test="extractSucceedCount != null">
        ExtractSucceedCount,
      </if>
      <if test="extractFailedCount != null">
        ExtractFailedCount,
      </if>
      <if test="storeFailedCount != null">
        StoreFailedCount,
      </if>
      <if test="notExtractCount != null">
        NotExtractCount,
      </if>
      <if test="networkTraffic != null">
        NetworkTraffic,
      </if>
      <if test="startedAt != null">
        StartedAt,
      </if>
      <if test="finishedAt != null">
        FinishedAt,
      </if>
      <if test="createdAt != null">
        CreatedAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="websiteId != null">
        #{websiteId,jdbcType=INTEGER},
      </if>
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="openUrlCount != null">
        #{openUrlCount,jdbcType=INTEGER},
      </if>
      <if test="openPageCount != null">
        #{openPageCount,jdbcType=INTEGER},
      </if>
      <if test="requestFailedCount != null">
        #{requestFailedCount,jdbcType=INTEGER},
      </if>
      <if test="retryCount != null">
        #{retryCount,jdbcType=INTEGER},
      </if>
      <if test="filteredCount != null">
        #{filteredCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="resultMessage != null">
        #{resultMessage,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="extractedCount != null">
        #{extractedCount,jdbcType=INTEGER},
      </if>
      <if test="extractSucceedCount != null">
        #{extractSucceedCount,jdbcType=INTEGER},
      </if>
      <if test="extractFailedCount != null">
        #{extractFailedCount,jdbcType=INTEGER},
      </if>
      <if test="storeFailedCount != null">
        #{storeFailedCount,jdbcType=INTEGER},
      </if>
      <if test="notExtractCount != null">
        #{notExtractCount,jdbcType=INTEGER},
      </if>
      <if test="networkTraffic != null">
        #{networkTraffic,jdbcType=BIGINT},
      </if>
      <if test="startedAt != null">
        #{startedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="finishedAt != null">
        #{finishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.datatrees.spider.share.domain.model.example.TaskExample" resultType="java.lang.Long">
    select count(*) from t_tasklog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.datatrees.spider.share.domain.model.Task">
    update t_tasklog
    <set>
      <if test="taskId != null">
        TaskId = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="websiteId != null">
        WebsiteId = #{websiteId,jdbcType=INTEGER},
      </if>
      <if test="nodeName != null">
        NodeName = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="openUrlCount != null">
        OpenUrlCount = #{openUrlCount,jdbcType=INTEGER},
      </if>
      <if test="openPageCount != null">
        OpenPageCount = #{openPageCount,jdbcType=INTEGER},
      </if>
      <if test="requestFailedCount != null">
        RequestFailedCount = #{requestFailedCount,jdbcType=INTEGER},
      </if>
      <if test="retryCount != null">
        RetryCount = #{retryCount,jdbcType=INTEGER},
      </if>
      <if test="filteredCount != null">
        FilteredCount = #{filteredCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        Status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="remark != null">
        Remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="resultMessage != null">
        ResultMessage = #{resultMessage,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        Duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="extractedCount != null">
        ExtractedCount = #{extractedCount,jdbcType=INTEGER},
      </if>
      <if test="extractSucceedCount != null">
        ExtractSucceedCount = #{extractSucceedCount,jdbcType=INTEGER},
      </if>
      <if test="extractFailedCount != null">
        ExtractFailedCount = #{extractFailedCount,jdbcType=INTEGER},
      </if>
      <if test="storeFailedCount != null">
        StoreFailedCount = #{storeFailedCount,jdbcType=INTEGER},
      </if>
      <if test="notExtractCount != null">
        NotExtractCount = #{notExtractCount,jdbcType=INTEGER},
      </if>
      <if test="networkTraffic != null">
        NetworkTraffic = #{networkTraffic,jdbcType=BIGINT},
      </if>
      <if test="startedAt != null">
        StartedAt = #{startedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="finishedAt != null">
        FinishedAt = #{finishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        CreatedAt = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>