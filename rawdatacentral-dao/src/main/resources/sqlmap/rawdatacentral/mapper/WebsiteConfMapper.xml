<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.datatrees.rawdatacentral.dao.WebsiteConfDAO">
  <resultMap id="BaseResultMap" type="com.datatrees.rawdatacentral.domain.model2.WebsiteConf">
    <id column="Id" jdbcType="INTEGER" property="websiteConfId" />
    <result column="WebsiteId" jdbcType="INTEGER" property="websiteId" />
    <result column="ExtractorConfig" jdbcType="VARCHAR" property="extractorConfig" />
    <result column="CreatedAt" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="UpdatedAt" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.datatrees.rawdatacentral.domain.model2.WebsiteConf">
    <result column="SearchConfig" jdbcType="LONGVARCHAR" property="searchConfig" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, WebsiteId, ExtractorConfig, CreatedAt, UpdatedAt
  </sql>
  <sql id="Blob_Column_List">
    SearchConfig
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.datatrees.rawdatacentral.domain.model2.example.WebsiteConfExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_website_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.datatrees.rawdatacentral.domain.model2.example.WebsiteConfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_website_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="pageNum > 0 and pageSize > 0">
        limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_website_conf
    where Id = #{websiteConfId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_website_conf
    where Id = #{websiteConfId,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.datatrees.rawdatacentral.domain.model2.WebsiteConf">
    <selectKey keyProperty="websiteConfId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_website_conf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="websiteId != null">
        WebsiteId,
      </if>
      <if test="extractorConfig != null">
        ExtractorConfig,
      </if>
      <if test="createdAt != null">
        CreatedAt,
      </if>
      <if test="updatedAt != null">
        UpdatedAt,
      </if>
      <if test="searchConfig != null">
        SearchConfig,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="websiteId != null">
        #{websiteId,jdbcType=INTEGER},
      </if>
      <if test="extractorConfig != null">
        #{extractorConfig,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="searchConfig != null">
        #{searchConfig,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.datatrees.rawdatacentral.domain.model2.example.WebsiteConfExample" resultType="java.lang.Long">
    select count(*) from t_website_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_website_conf
    set Id = #{record.websiteConfId,jdbcType=INTEGER},
      WebsiteId = #{record.websiteId,jdbcType=INTEGER},
      ExtractorConfig = #{record.extractorConfig,jdbcType=VARCHAR},
      CreatedAt = #{record.createdAt,jdbcType=TIMESTAMP},
      UpdatedAt = #{record.updatedAt,jdbcType=TIMESTAMP},
      SearchConfig = #{record.searchConfig,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.datatrees.rawdatacentral.domain.model2.WebsiteConf">
    update t_website_conf
    <set>
      <if test="websiteId != null">
        WebsiteId = #{websiteId,jdbcType=INTEGER},
      </if>
      <if test="extractorConfig != null">
        ExtractorConfig = #{extractorConfig,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        CreatedAt = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        UpdatedAt = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="searchConfig != null">
        SearchConfig = #{searchConfig,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{websiteConfId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.datatrees.rawdatacentral.domain.model2.WebsiteConf">
    update t_website_conf
    set WebsiteId = #{websiteId,jdbcType=INTEGER},
      ExtractorConfig = #{extractorConfig,jdbcType=VARCHAR},
      CreatedAt = #{createdAt,jdbcType=TIMESTAMP},
      UpdatedAt = #{updatedAt,jdbcType=TIMESTAMP},
      SearchConfig = #{searchConfig,jdbcType=LONGVARCHAR}
    where Id = #{websiteConfId,jdbcType=INTEGER}
  </update>
</mapper>