def mainClass = 'com.datatrees.rawdatacentral.web.Application'
jar {
//    sourceSets.web.resources.exclude('**/*')
//    sourceSets.web.resources.include('cacerts/*')
//    def libs = "conf/";
    def libs = "";
    configurations.compile.each {
        if(it.name != "rawdatacentral-plugin-operator.jar"){
            libs += " lib/" + it.name
        }
    }
//    println  libs
    manifest {
        attributes 'Main-Class': mainClass
        attributes 'Class-Path': libs
    }
}

def buildTime = new Date().format("yyMMddHHmmss")

task copyResources() {
    doLast {
        delete {
            delete "$rootDir/target"
        }
        copy {
            from file("$buildDir/libs/$project.name-$version" + ".jar")
            into "$rootDir/target/$rootProject.name"
        }
        file("$rootDir/target/$rootProject.name/$project.name-$version" + ".jar").renameTo("$rootDir/target/$rootProject.name/$project.name" + ".jar");
        copy {
            from configurations.compile
            into "$rootDir/target/$rootProject.name/lib"
            exclude ("rawdatacentral-plugin-operator.jar")
        }
        copy {
            from "$rootDir/plugin"
            into "$rootDir/target/$rootProject.name/plugin"
        }
        copy {
            from "$rootDir/bin"
            into "$rootDir/target/$rootProject.name/bin"
        }
        copy {
            from "$rootDir/logs"
            into "$rootDir/target/$rootProject.name/logs"
        }
        println "源码文件:$rootDir/target/$rootProject.name-$version-$buildTime" + ".tar.gz"
    }
}

task installApp(type: Tar, dependsOn: 'copyResources') {
    baseName = rootProject.name
    classifier = buildTime
    compression = Compression.GZIP
    destinationDir = file("$rootDir/target") //打包到目录下
    extension = 'tar.gz'
    into("$rootProject.name") {
        from "$rootDir/target/$rootProject.name"
    }
}